from github import Github, GithubException
import os

class GitHubClient:
    def __init__(self, token=None):
        self.token = token or os.environ.get("GITHUB_TOKEN")
        if not self.token:
            raise ValueError("GitHub token not provided. Set GITHUB_TOKEN env variable.")
        self.client = Github(self.token)

    def create_repo(self, repo_name, private=True, description=None):
        user = self.client.get_user()
        try:
            repo = user.create_repo(
                name=repo_name,
                private=private,
                description=description or f"Repo for {repo_name} generated by Agentic DevOps Assistant."
            )
            return repo.clone_url
        except GithubException as e:
            raise RuntimeError(f"Error creating GitHub repo: {e}")
